{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1","program":"/home/pavlo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","queue","/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=4a4f20f753fa490c","-C","extra-filename=-4a4f20f753fa490c","--out-dir","/home/pavlo/projects/blockchain2/mint/target/rls/debug/deps","-L","dependency=/home/pavlo/projects/blockchain2/mint/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/pavlo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pavlo/projects/blockchain2/mint/target/rls/debug/deps/libqueue-4a4f20f753fa490c.rmeta"},"prelude":{"crate_id":{"name":"queue","disambiguator":[14227714794927967399,0]},"crate_root":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src","external_crates":[{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}}],"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":0,"byte_end":6820,"line_start":1,"line_end":306,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":0,"byte_end":6820,"line_start":1,"line_end":306,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":3},{"krate":0,"index":6}],"decl_id":null,"docs":" A simple and easy wrapper around `Vec` to implement a FIFO queue. This is\n no fancy, advanced data type but something simple you can use easily until\n or unless you need something different.","sig":null,"attributes":[{"value":"/ A simple and easy wrapper around `Vec` to implement a FIFO queue. This is","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ no fancy, advanced data type but something simple you can use easily until","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":78,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":79}},{"value":"/ or unless you need something different.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":157,"byte_end":200,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":201,"byte_end":204,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":205,"byte_end":218,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":219,"byte_end":222,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":223,"byte_end":230,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":231,"byte_end":252,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":253,"byte_end":256,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":257,"byte_end":286,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":287,"byte_end":290,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ q.queue(\"hello\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":291,"byte_end":321,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/ q.queue(\"out\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":322,"byte_end":350,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/ q.queue(\"there!\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":351,"byte_end":382,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":383,"byte_end":386,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ while let Some(item) = q.dequeue() {","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":387,"byte_end":427,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/     println!(\"{}\", item);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":428,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":458,"byte_end":463,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":464,"byte_end":471,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":472,"byte_end":475,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Outputs:","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":476,"byte_end":488,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":489,"byte_end":492,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":493,"byte_end":504,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ hello","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":505,"byte_end":514,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ out","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":515,"byte_end":522,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ there!","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":523,"byte_end":533,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":534,"byte_end":541,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1412,"byte_end":1417,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" A first in, first out queue built around `Vec`.","sig":null,"attributes":[{"value":"/ A first in, first out queue built around `Vec`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":568,"byte_end":619,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":620,"byte_end":623,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ An optional capacity can be set (or changed) to ensure the `Queue` never","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":624,"byte_end":700,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ grows past a certain size. If the capacity is not specified (ie set to","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":701,"byte_end":775,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ `None`) then the `Queue` will grow as needed. If you're worried about","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":776,"byte_end":849,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ memory allocation, set a capacity and the necessary memory will be","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":850,"byte_end":920,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ allocated at that time. Otherwise memory could be allocated, deallocated","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":921,"byte_end":997,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ and reallocated as the `Queue` changes size.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":998,"byte_end":1046,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1047,"byte_end":1050,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The only requirement of the type used is that it implements the `Clone`","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1051,"byte_end":1126,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ trait.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1127,"byte_end":1137,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1142,"byte_end":1155,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1156,"byte_end":1159,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1160,"byte_end":1167,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1168,"byte_end":1189,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1190,"byte_end":1193,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let mut q = Queue::with_capacity(5);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1194,"byte_end":1234,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1235,"byte_end":1238,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1239,"byte_end":1258,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ \tq.queue(i).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1259,"byte_end":1284,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1285,"byte_end":1290,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1291,"byte_end":1294,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ for i in 0..5 {","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1295,"byte_end":1314,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/ \tassert_eq!(q.dequeue(), Some(i));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1315,"byte_end":1353,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1354,"byte_end":1359,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1360,"byte_end":1367,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1923,"byte_end":1926,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"name":"new","qualname":"<Queue<T>>::new","value":"pub fn new() -> Queue<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Queue<T>`.","sig":null,"attributes":[{"value":"/ Constructs a new `Queue<T>`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1768,"byte_end":1800,"line_start":83,"line_end":83,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1802,"byte_end":1805,"line_start":84,"line_end":84,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1807,"byte_end":1820,"line_start":85,"line_end":85,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1822,"byte_end":1825,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1827,"byte_end":1834,"line_start":87,"line_end":87,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1836,"byte_end":1859,"line_start":88,"line_end":88,"column_start":2,"column_end":25}},{"value":"/ let mut q: Queue<String> = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1861,"byte_end":1905,"line_start":89,"line_end":89,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1907,"byte_end":1914,"line_start":90,"line_end":90,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2189,"byte_end":2202,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"name":"with_capacity","qualname":"<Queue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Queue<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Queue<T>` with a specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new `Queue<T>` with a specified capacity.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1996,"byte_end":2054,"line_start":98,"line_end":98,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2056,"byte_end":2059,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2061,"byte_end":2074,"line_start":100,"line_end":100,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2076,"byte_end":2079,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2081,"byte_end":2088,"line_start":102,"line_end":102,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2090,"byte_end":2113,"line_start":103,"line_end":103,"column_start":2,"column_end":25}},{"value":"/ let mut q: Queue<String> = Queue::with_capacity(20);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2115,"byte_end":2171,"line_start":104,"line_end":104,"column_start":2,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2173,"byte_end":2180,"line_start":105,"line_end":105,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2624,"byte_end":2629,"line_start":124,"line_end":124,"column_start":9,"column_end":14},"name":"queue","qualname":"<Queue<T>>::queue","value":"pub fn queue(&mut Self, T) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Add an item to the end of the `Queue`. Returns `Ok(usize)` with the new\n length of the `Queue`, or `Err(())` if there is no more room.","sig":null,"attributes":[{"value":"/ Add an item to the end of the `Queue`. Returns `Ok(usize)` with the new","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2300,"byte_end":2375,"line_start":113,"line_end":113,"column_start":2,"column_end":77}},{"value":"/ length of the `Queue`, or `Err(())` if there is no more room.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2377,"byte_end":2442,"line_start":114,"line_end":114,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2444,"byte_end":2447,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2449,"byte_end":2462,"line_start":116,"line_end":116,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2464,"byte_end":2467,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2469,"byte_end":2476,"line_start":118,"line_end":118,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2478,"byte_end":2501,"line_start":119,"line_end":119,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2503,"byte_end":2532,"line_start":120,"line_end":120,"column_start":2,"column_end":31}},{"value":"/ q.queue(\"hello\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2534,"byte_end":2564,"line_start":121,"line_end":121,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(q.peek(), Some(\"hello\"));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2566,"byte_end":2606,"line_start":122,"line_end":122,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2608,"byte_end":2615,"line_start":123,"line_end":123,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3299,"byte_end":3310,"line_start":151,"line_end":151,"column_start":9,"column_end":20},"name":"force_queue","qualname":"<Queue<T>>::force_queue","value":"pub fn force_queue(&mut Self, T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Forcefully add an item to the end of the `Queue`. If the `Queue` is at\n capacity, the first item will be removed to make room. Returns `usize`\n with the new length of the `Queue`.","sig":null,"attributes":[{"value":"/ Forcefully add an item to the end of the `Queue`. If the `Queue` is at","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2878,"byte_end":2952,"line_start":138,"line_end":138,"column_start":2,"column_end":76}},{"value":"/ capacity, the first item will be removed to make room. Returns `usize`","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":2954,"byte_end":3028,"line_start":139,"line_end":139,"column_start":2,"column_end":76}},{"value":"/ with the new length of the `Queue`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3030,"byte_end":3069,"line_start":140,"line_end":140,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3071,"byte_end":3074,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3076,"byte_end":3089,"line_start":142,"line_end":142,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3091,"byte_end":3094,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3096,"byte_end":3103,"line_start":144,"line_end":144,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3105,"byte_end":3128,"line_start":145,"line_end":145,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::with_capacity(1);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3130,"byte_end":3170,"line_start":146,"line_end":146,"column_start":2,"column_end":42}},{"value":"/ q.queue(\"hello\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3172,"byte_end":3202,"line_start":147,"line_end":147,"column_start":2,"column_end":32}},{"value":"/ let _ = q.force_queue(\"world\");","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3204,"byte_end":3239,"line_start":148,"line_end":148,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(q.peek(), Some(\"world\"));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3241,"byte_end":3281,"line_start":149,"line_end":149,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3283,"byte_end":3290,"line_start":150,"line_end":150,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3885,"byte_end":3892,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"name":"dequeue","qualname":"<Queue<T>>::dequeue","value":"pub fn dequeue(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the next item from the `Queue`. Returns `Option<T>` so it will\n return either `Some(T)` or `None` depending on if there's anything in\n the `Queue` to get.","sig":null,"attributes":[{"value":"/ Remove the next item from the `Queue`. Returns `Option<T>` so it will","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3495,"byte_end":3568,"line_start":160,"line_end":160,"column_start":2,"column_end":75}},{"value":"/ return either `Some(T)` or `None` depending on if there's anything in","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3570,"byte_end":3643,"line_start":161,"line_end":161,"column_start":2,"column_end":75}},{"value":"/ the `Queue` to get.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3645,"byte_end":3668,"line_start":162,"line_end":162,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3670,"byte_end":3673,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3675,"byte_end":3688,"line_start":164,"line_end":164,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3690,"byte_end":3693,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3695,"byte_end":3702,"line_start":166,"line_end":166,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3704,"byte_end":3727,"line_start":167,"line_end":167,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3729,"byte_end":3758,"line_start":168,"line_end":168,"column_start":2,"column_end":31}},{"value":"/ q.queue(\"hello\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3760,"byte_end":3790,"line_start":169,"line_end":169,"column_start":2,"column_end":32}},{"value":"/ q.queue(\"world\").unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3792,"byte_end":3822,"line_start":170,"line_end":170,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(q.dequeue(), Some(\"hello\"));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3824,"byte_end":3867,"line_start":171,"line_end":171,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":3869,"byte_end":3876,"line_start":172,"line_end":172,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":193,"line_end":193,"column_start":9,"column_end":12},"name":"vec","qualname":"<Queue<T>>::vec","value":"pub fn vec(&Self) -> &Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a `&Vec<T>` for the `Queue<T>`.","sig":null,"attributes":[{"value":"/ Return a `&Vec<T>` for the `Queue<T>`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4003,"byte_end":4045,"line_start":181,"line_end":181,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4047,"byte_end":4050,"line_start":182,"line_end":182,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4052,"byte_end":4065,"line_start":183,"line_end":183,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4067,"byte_end":4070,"line_start":184,"line_end":184,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4072,"byte_end":4079,"line_start":185,"line_end":185,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4081,"byte_end":4104,"line_start":186,"line_end":186,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4106,"byte_end":4135,"line_start":187,"line_end":187,"column_start":2,"column_end":31}},{"value":"/ q.queue(1).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4137,"byte_end":4161,"line_start":188,"line_end":188,"column_start":2,"column_end":26}},{"value":"/ q.queue(2).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4163,"byte_end":4187,"line_start":189,"line_end":189,"column_start":2,"column_end":26}},{"value":"/ q.queue(3).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4189,"byte_end":4213,"line_start":190,"line_end":190,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(&vec![1, 2, 3], q.vec());","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4215,"byte_end":4255,"line_start":191,"line_end":191,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4257,"byte_end":4264,"line_start":192,"line_end":192,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4555,"byte_end":4559,"line_start":207,"line_end":207,"column_start":9,"column_end":13},"name":"peek","qualname":"<Queue<T>>::peek","value":"pub fn peek(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Peek at the next item in the `Queue`, if there's something there.","sig":null,"attributes":[{"value":"/ Peek at the next item in the `Queue`, if there's something there.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4314,"byte_end":4383,"line_start":197,"line_end":197,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4385,"byte_end":4388,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4390,"byte_end":4403,"line_start":199,"line_end":199,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4405,"byte_end":4408,"line_start":200,"line_end":200,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4410,"byte_end":4417,"line_start":201,"line_end":201,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4419,"byte_end":4442,"line_start":202,"line_end":202,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4444,"byte_end":4473,"line_start":203,"line_end":203,"column_start":2,"column_end":31}},{"value":"/ q.queue(12).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4475,"byte_end":4500,"line_start":204,"line_end":204,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(q.peek(), Some(12));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4502,"byte_end":4537,"line_start":205,"line_end":205,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4539,"byte_end":4546,"line_start":206,"line_end":206,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4916,"byte_end":4919,"line_start":226,"line_end":226,"column_start":9,"column_end":12},"name":"len","qualname":"<Queue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items currently in the `Queue`.","sig":null,"attributes":[{"value":"/ The number of items currently in the `Queue`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4667,"byte_end":4716,"line_start":215,"line_end":215,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4718,"byte_end":4721,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4723,"byte_end":4736,"line_start":217,"line_end":217,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4743,"byte_end":4750,"line_start":219,"line_end":219,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4752,"byte_end":4775,"line_start":220,"line_end":220,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::with_capacity(8);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4777,"byte_end":4817,"line_start":221,"line_end":221,"column_start":2,"column_end":42}},{"value":"/ q.queue(1).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4819,"byte_end":4843,"line_start":222,"line_end":222,"column_start":2,"column_end":26}},{"value":"/ q.queue(2).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4845,"byte_end":4869,"line_start":223,"line_end":223,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(q.len(), 2);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4871,"byte_end":4898,"line_start":224,"line_end":224,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4900,"byte_end":4907,"line_start":225,"line_end":225,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5203,"byte_end":5211,"line_start":241,"line_end":241,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<Queue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the `Queue` is empty.","sig":null,"attributes":[{"value":"/ Check if the `Queue` is empty.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4960,"byte_end":4994,"line_start":230,"line_end":230,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":4996,"byte_end":4999,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5001,"byte_end":5014,"line_start":232,"line_end":232,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5016,"byte_end":5019,"line_start":233,"line_end":233,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5021,"byte_end":5028,"line_start":234,"line_end":234,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5030,"byte_end":5053,"line_start":235,"line_end":235,"column_start":2,"column_end":25}},{"value":"/ let mut q = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5055,"byte_end":5084,"line_start":236,"line_end":236,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(q.is_empty(), true);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5086,"byte_end":5121,"line_start":237,"line_end":237,"column_start":2,"column_end":37}},{"value":"/ q.queue(1).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5123,"byte_end":5147,"line_start":238,"line_end":238,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(q.is_empty(), false);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5149,"byte_end":5185,"line_start":239,"line_end":239,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5187,"byte_end":5194,"line_start":240,"line_end":240,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5598,"byte_end":5606,"line_start":256,"line_end":256,"column_start":9,"column_end":17},"name":"capacity","qualname":"<Queue<T>>::capacity","value":"pub fn capacity(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the capacity for a `Queue`. If there is no capacity set (the\n `Queue` can grow as needed) then `None` will be returned, otherwise\n it will be `Some(usize)`.","sig":null,"attributes":[{"value":"/ Query the capacity for a `Queue`. If there is no capacity set (the","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5256,"byte_end":5326,"line_start":245,"line_end":245,"column_start":2,"column_end":72}},{"value":"/ `Queue` can grow as needed) then `None` will be returned, otherwise","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5328,"byte_end":5399,"line_start":246,"line_end":246,"column_start":2,"column_end":73}},{"value":"/ it will be `Some(usize)`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5401,"byte_end":5430,"line_start":247,"line_end":247,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5432,"byte_end":5435,"line_start":248,"line_end":248,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5437,"byte_end":5450,"line_start":249,"line_end":249,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5452,"byte_end":5455,"line_start":250,"line_end":250,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5457,"byte_end":5464,"line_start":251,"line_end":251,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5466,"byte_end":5489,"line_start":252,"line_end":252,"column_start":2,"column_end":25}},{"value":"/ let q: Queue<u8> = Queue::with_capacity(12);","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5491,"byte_end":5539,"line_start":253,"line_end":253,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(q.capacity(), Some(12));","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5541,"byte_end":5580,"line_start":254,"line_end":254,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5582,"byte_end":5589,"line_start":255,"line_end":255,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6341,"byte_end":6353,"line_start":276,"line_end":276,"column_start":9,"column_end":21},"name":"set_capacity","qualname":"<Queue<T>>::set_capacity","value":"pub fn set_capacity<C: Into<Option<usize>>>(&mut Self, C) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Modify the capacity of a `Queue`. If set to `None`, the `Queue` will\n grow automatically, as needed. Otherwise, it will be limited to the\n specified number of items. If there are more items in the `Queue` than\n the requested capacity, `Err(())` will be returned, otherwise the\n operation will succeed and `Ok(())` will be returned. If the capacity\n is shrunk, the underlying `Vec` will be shrunk also, which would free\n up whatever extra memory was allocated for the `Queue`.","sig":null,"attributes":[{"value":"/ Modify the capacity of a `Queue`. If set to `None`, the `Queue` will","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5649,"byte_end":5721,"line_start":260,"line_end":260,"column_start":2,"column_end":74}},{"value":"/ grow automatically, as needed. Otherwise, it will be limited to the","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5723,"byte_end":5794,"line_start":261,"line_end":261,"column_start":2,"column_end":73}},{"value":"/ specified number of items. If there are more items in the `Queue` than","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5796,"byte_end":5870,"line_start":262,"line_end":262,"column_start":2,"column_end":76}},{"value":"/ the requested capacity, `Err(())` will be returned, otherwise the","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5872,"byte_end":5941,"line_start":263,"line_end":263,"column_start":2,"column_end":71}},{"value":"/ operation will succeed and `Ok(())` will be returned. If the capacity","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":5943,"byte_end":6016,"line_start":264,"line_end":264,"column_start":2,"column_end":75}},{"value":"/ is shrunk, the underlying `Vec` will be shrunk also, which would free","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6018,"byte_end":6091,"line_start":265,"line_end":265,"column_start":2,"column_end":75}},{"value":"/ up whatever extra memory was allocated for the `Queue`.","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6093,"byte_end":6152,"line_start":266,"line_end":266,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6154,"byte_end":6157,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6159,"byte_end":6172,"line_start":268,"line_end":268,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6179,"byte_end":6186,"line_start":270,"line_end":270,"column_start":2,"column_end":9}},{"value":"/ # use queue::Queue;","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6188,"byte_end":6211,"line_start":271,"line_end":271,"column_start":2,"column_end":25}},{"value":"/ let mut q: Queue<u8> = Queue::new();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6213,"byte_end":6253,"line_start":272,"line_end":272,"column_start":2,"column_end":42}},{"value":"/ q.set_capacity(12).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6255,"byte_end":6287,"line_start":273,"line_end":273,"column_start":2,"column_end":34}},{"value":"/ q.set_capacity(None).unwrap();","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6289,"byte_end":6323,"line_start":274,"line_end":274,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":6325,"byte_end":6332,"line_start":275,"line_end":275,"column_start":2,"column_end":9}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1493,"byte_end":1498,"line_start":65,"line_end":65,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1756,"byte_end":1761,"line_start":82,"line_end":82,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1493,"byte_end":1498,"line_start":65,"line_end":65,"column_start":33,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavlo/.cargo/registry/src/github.com-1ecc6299db9ec823/queue-0.3.1/src/lib.rs","byte_start":1756,"byte_end":1761,"line_start":82,"line_end":82,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}}]}